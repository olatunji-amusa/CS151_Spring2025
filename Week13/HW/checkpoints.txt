6.19:   What kinds of values may be specified as default arguments?
**********************************************************************
ANSWER HERE

**********************************************************************

6.20:   Write the prototype and header for a function called compute. The function
        should have three parameters: an int, a double, and a long (not necessarily
        in that order). The int parameter should have a default argument of 5, and
        the long parameter should have a default argument of 65536. The double
        parameter should not have a default argument.
**********************************************************************
ANSWER HERE

**********************************************************************

6.21:   Write the prototype and header for a function called calculate. The function
        should have three parameters: an int, a reference to a double, and a long
        (not necessarily in that order.) Only the int parameter should have a default
        argument, which is 47.  
**********************************************************************
ANSWER HERE

**********************************************************************

6.22:   What is the output of the following program?

        #include <iostream>
        using namespace std;

        void test(int = 2, int = 4, int = 6);
        int main()
        {
            test();
            test(6);
            test(3, 9);
            test(1, 5, 7);
            return 0;
        }
        void test (int first, int second, int third)
        {
            first += 3;
            second += 6;
            third += 9;
            cout << first << " " << second << " " << third << endl;
        }
**********************************************************************
ANSWER HERE

**********************************************************************

6.23:   The following program asks the user to enter two numbers. What is the output
        of the program if the user enters 12 and 14?
        
        #include <iostream>
        using namespace std;

        void func1(int &, int &);
        void func2(int &, int &, int &);
        void func3(int, int, int);

        int main()
        {
            int x = 0, y = 0, z = 0;
            cout << x << " " << y << " " << z << endl;
            func1(x, y);
            cout << x << " " << y << " " << z << endl;
            func2(x, y, z);
            cout << x << " " << y << " " << z << endl;
            func3(x, y, z);
            cout << x << " " << y << " " << z << endl;
            return 0;
        }
        void func1(int &a, int &b)
        {
            cout << "Enter two numbers: ";
            cin >> a >> b;
        }
        void func2(int &a, int &b, int &c)
        {
            b++;
            c−−;
            a = b + c;
        }
        void func3(int a, int b, int c)
        {
            a = b − c;
        }
**********************************************************************
ANSWER HERE

**********************************************************************

6.24:   What is the output of the following program?

        #include <iostream>
        #include <cstdlib>
        using namespace std;

        void showVals(double, double);

        int main()
        {
            double x = 1.2, y = 4.5;
            showVals(x, y);
            return 0;
        }
        void showVals(double p1, double p2)
        {
            cout << p1 << endl;
            exit(0);
            cout << p2 << endl;
        }
**********************************************************************
ANSWER HERE

**********************************************************************

6.25:   What is the output of the following program?

        #include <iostream>
        using namespace std;

        int manip(int);
        int manip(int, int);
        int manip(int, double);

        int main()
        {
            int x = 2, y= 4, z;
            double a = 3.1;
            z = manip(x) + manip(x, y) + manip(y, a);
            cout << z << endl;
            return 0;
        }
        int manip(int val)
        {
            return val + val * 2;
        }
        int manip(int val1, int val2)
        {
            return (val1 + val2) * 2;
        }
        int manip(int val1, double val2)
        {
            return val1 * static_cast<int>(val2);
        }

**********************************************************************
ANSWER HERE

**********************************************************************
